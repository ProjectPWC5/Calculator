app.component.html

<div class="calculator">
  <input type="text" id="screen" [(ngModel)]="expression" maxlength="20">
  <div class="calc-buttons">
    <div class="functions-one">
      <button class="button triggers" (click)="onButtonClick('C')">C</button>
      <button class="button basic-stuff" (click)="onButtonClick('(')"> ( </button>
      <button class="button basic-stuff" (click)="onButtonClick(')')"> ) </button>
      <button class="button numbers" (click)="onButtonClick('7')">7</button>
      <button class="button numbers" (click)="onButtonClick('8')">8</button>
      <button class="button numbers" (click)="onButtonClick('9')">9</button>
      <button class="button numbers" (click)="onButtonClick('4')">4</button>
      <button class="button numbers" (click)="onButtonClick('5')">5</button>
      <button class="button numbers" (click)="onButtonClick('6')">6</button>
      <button class="button numbers" (click)="onButtonClick('1')">1</button>
      <button class="button numbers" (click)="onButtonClick('2')">2</button>
      <button class="button numbers" (click)="onButtonClick('3')">3</button>
      <button class="button basic-stuff" (click)="onButtonClick('±')">±</button>
      <button class="button numbers" (click)="onButtonClick('0')">0</button>
      <button class="button basic-stuff" (click)="onButtonClick('.')">.</button>
    </div>
    <div class="functions-two">
      <button class="button triggers" (click)="onButtonClick('<=')"><=</button>
      <button class="button complex-stuff" (click)="onButtonClick('%')">%</button>
      <button class="button complex-stuff" (click)="onButtonClick('x !')">x !</button>
      <button class="button complex-stuff" (click)="onButtonClick('x^')">x^</button>
      <button class="button basic-stuff" (click)="onButtonClick('*')">*</button>
      <button class="button basic-stuff" (click)="onButtonClick('/')">/</button>
      <button class="button complex-stuff" (click)="onButtonClick('ln')">ln</button>
      <button class="button complex-stuff" (click)="onButtonClick('e')">e</button>
      <button class="button basic-stuff" (click)="onButtonClick('+')">+</button>
      <button class="button complex-stuff" (click)="onButtonClick('x ²')">x ²</button>
      <button class="button complex-stuff" (click)="onButtonClick('log')">log</button>
      <button class="button complex-stuff" (click)="onButtonClick('cos')">cos</button>
      <button class="button basic-stuff" (click)="onButtonClick('-')">-</button>
      <button class="button complex-stuff" (click)="onButtonClick('√')">√</button>
      <button class="button complex-stuff" (click)="onButtonClick('sin')">sin</button>
      <button class="button complex-stuff" (click)="onButtonClick('tan')">tan</button>
      <button class="button triggers" (click)="onButtonClick('=')">=</button>
      <button class="button complex-stuff" (click)="onButtonClick('π')">π</button>
      <button class="button complex-stuff" (click)="onButtonClick('∘')">∘</button>
      <button class="button complex-stuff" (click)="onButtonClick('rad')">rad</button>
    </div>
  </div>
</div>

****************************************************************************************************************************************************************************************************************************************

app.component.css
.calculator {
    max-width: 530px;
    background-color: beige;
    padding: 20px;
    border-radius: 10px;
    margin: 10px auto;
    }
    input[type=text] {
    width: 315px;
        height: 25px;
        border-radius: 5px;
        border: 0px;
        background-color: #333333;
        color: #d9d9d9;
        padding: 0 5px 0 5px;
        margin: 0 0px 10px 84px;
    
    }
    .calc-buttons {
        display: flex;
    flex-wrap: wrap;
    justify-content: space-between;
    
    }
    .button {
       margin: 3px;
    width: 63px;
    border: none;
    height: 25px;
    border-radius: 4px;
    color: #000000;
    cursor: pointer;
    }
    button:hover {
      background-color: hsla(180, 100%, 40%, 0.3);
      transition: .2s;
    }
    .functions-one {
        width: 210px;
        display: flex;
        flex-wrap: wrap;
        justify-content: space-evenly;
    }
    
    .functions-two {
    width: 280px;
        display: flex;
        flex-wrap: wrap;
        justify-content: space-between;
    }
    .triggers {
        background-color: #ffc266;
    }
    .numbers {
        background-color: #999999;
    }
    .basic-stuff {
        background-color: #80d4ff;
    }
    
    .complex-stuff {
        background-color: #80ffff;
    }

************************************************************************************************************************************************************************************************************************************************************

app.module.ts

import { NgModule } from '@angular/core';
import { BrowserModule } from '@angular/platform-browser';

import { AppRoutingModule } from './app-routing.module';
import { AppComponent } from './app.component';
import { FormsModule } from '@angular/forms';

@NgModule({
  declarations: [
    AppComponent
  ],
  imports: [
    BrowserModule,
    AppRoutingModule,
    FormsModule
  ],
  providers: [],
  bootstrap: [AppComponent]
})
export class AppModule { }

*************************************************************************************************************************************************************************************************************************************************************

app.component.ts

import { Component } from '@angular/core';

@Component({
  selector: 'app-root',
  templateUrl: './app.component.html',
  styleUrls: ['./app.component.css']
})
export class AppComponent {
  title = 'calculatorapp';
 
    expression: string = '';
  
    onButtonClick(value: string) {
      if (value === '=') {
        // Implement the calculation logic when '=' is clicked.
        try {
          this.expression = eval(this.expression);
        } catch (error) {
          this.expression = 'Error';
        }
      } else if (value === 'C') {
        // Clear the input.
        this.expression = '';
      } else {
        // Append the clicked value to the expression.
        this.expression += value;
      }
}
  }
